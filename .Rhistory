pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
csv.title <- list.files(directory)
csv.title <- list.files("specdata")
csv.title
csv.title <- list.csv("specdata")
csv.title <- list.csv("specdata")
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
csv.num
chosen.data <- na.omit(csv.title[match(id, csv.num)])
chosen.data <- na.omit(csv.title[match(1, 10)])
chosen.data
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## display list of files in the directory
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
## Choose specific files
choosen.data <- na.omit(csv.title[match(id, csv.num)])
## read selected data
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
col<- sapply(read.data, function(x) x[ ,pollutant])
## unlist sepcific pollutant
poll<-unlist(col)
## Calculate mean of that pollutant
mean(poll, na.rm = TRUE)
}
pollutantmean("specdata", "nitrate", 23)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv(files_toread[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
+     # list files
+     files_full <- list.files(directory, full.names = TRUE)
+     files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
+     output <- data.frame(id = id, nobs = 0)
+     for (i in id) {
+         tmp <- read.csv(files_toread[i]) # read the data
+         nobs <- sum(complete.cases(tmp)) # number of complete cases
+         output[i, "nobs"] <- nobs
+     }
+     output
+ }
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv(files_toread[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 3)
complete("specdata", 1)
tmp <- read.csv(files_toread[i])
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("pollutantmean.R")
submit()
2
submit()
submit()
submit()
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv( read.data[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv( read.data[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
output <- data.frame(id = id, nobs = 0)
nobs <- sum(complete.cases(read.data)) # number of complete cases
output
}
complete("specdata", 1)
complete("specdata", 1:10)
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.data[i] # read the data
nobs <- sum(complete.cases(read.temp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.data[i] # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
output <- rbind(output, read.csv(fileslist[i]))
nobs <- sum(complete.cases(output)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
output <- rbind(output, read.csv(files_toread[i]))
nobs <- sum(complete.cases(output)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
# create an empty placeholder, to grow sequentially. Known in some circles as R Inferno
# http://www.burns-stat.com/documents/books/the-r-inferno/
dat <- data.frame()
for (i in id) { # select filenames based on their position in the list
# (prone to errors, because it depends on the order)
dat <- rbind(dat, read.csv(files_full[i])) # read the data, and append it
# to previous data.frame. Why??
nobs <- sum(complete.cases(files_full[i])) # number of complete cases...
# in a character vector of length 1
data <- data.frame(id, nobs)               # this gets overwritten every time
}
data
}
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
# create an empty placeholder, to grow sequentially. Known in some circles as R Inferno
# http://www.burns-stat.com/documents/books/the-r-inferno/
dat <- data.frame()
for (i in id) { # select filenames based on their position in the list
# (prone to errors, because it depends on the order)
dat <- rbind(dat, read.csv(files_full[i])) # read the data, and append it
# to previous data.frame. Why??
nobs <- sum(complete.cases(files_full[i])) # number of complete cases...
# in a character vector of length 1
data <- data.frame(id, nobs)               # this gets overwritten every time
}
data
}
complete("specdata", 1)
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
# create an empty placeholder, to grow sequentially. Known in some circles as R Inferno
# http://www.burns-stat.com/documents/books/the-r-inferno/
dat <- data.frame()
for (i in id) { # select filenames based on their position in the list
# (prone to errors, because it depends on the order)
dat <- rbind(dat, read.csv(files_full[i])) # read the data, and append it
# to previous data.frame. Why??
nobs <- sum(complete.cases(dat)) # number of complete cases...
# in a character vector of length 1
data <- data.frame(id, "nobs")<- nobs               # this gets overwritten every time
}
data
}
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
# create an empty placeholder, to grow sequentially. Known in some circles as R Inferno
# http://www.burns-stat.com/documents/books/the-r-inferno/
data <- data.frame()
for (i in id) { # select filenames based on their position in the list
# (prone to errors, because it depends on the order)
dat <- rbind(dat, read.csv(files_full[i])) # read the data, and append it
# to previous data.frame. Why??
nobs <- sum(complete.cases(dat)) # number of complete cases...
# in a character vector of length 1
data [id, "nobs"]<- nobs               # this gets overwritten every time
}
data
}
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
# create an empty placeholder, to grow sequentially. Known in some circles as R Inferno
# http://www.burns-stat.com/documents/books/the-r-inferno/
data <- data.frame()
for (i in id) { # select filenames based on their position in the list
# (prone to errors, because it depends on the order)
data <- rbind(dat, read.csv(files_full[i])) # read the data, and append it
# to previous data.frame. Why??
nobs <- sum(complete.cases(data)) # number of complete cases...
# in a character vector of length 1
data [id, "nobs"]<- nobs               # this gets overwritten every time
}
data
}
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
# create an empty placeholder, to grow sequentially. Known in some circles as R Inferno
# http://www.burns-stat.com/documents/books/the-r-inferno/
data <- data.frame()
for (i in id) { # select filenames based on their position in the list
# (prone to errors, because it depends on the order)
data <- rbind(data, read.csv(files_full[i])) # read the data, and append it
# to previous data.frame. Why??
nobs <- sum(complete.cases(data)) # number of complete cases...
# in a character vector of length 1
data [id, "nobs"]<- nobs               # this gets overwritten every time
}
data
}
complete("specdata", 3)
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
# create an empty placeholder, to grow sequentially. Known in some circles as R Inferno
# http://www.burns-stat.com/documents/books/the-r-inferno/
data <- data.frame()
for (i in id) { # select filenames based on their position in the list
# (prone to errors, because it depends on the order)
data <- rbind(data, read.csv(files_full[i])) # read the data, and append it
# to previous data.frame. Why??
nobs <- sum(complete.cases(files_full[i])) # number of complete cases...
# in a character vector of length 1
data [id, "nobs"]<- nobs               # this gets overwritten every time
}
data
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
# create an empty placeholder, to grow sequentially. Known in some circles as R Inferno
# http://www.burns-stat.com/documents/books/the-r-inferno/
data <- data.frame()
for (i in id) { # select filenames based on their position in the list
# (prone to errors, because it depends on the order)
data <- rbind(data, read.csv(files_full[i])) # read the data, and append it
}
# to previous data.frame. Why??
nobs <- sum(complete.cases(data)) # number of complete cases...
data [id, "nobs"]<- nobs
data
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
output <- rbind(output, read.csv(files_toread[i]))
}
nobs <- sum(complete.cases(output)) # number of complete cases
output[i, "nobs"] <- nobs
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
output <- rbind(output, read.csv(files_toread[i]))
}
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv(files_toread[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
files_full <- list.files(directory, choosen.data)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv(files_toread[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
files_full <- list.files(directory, read.data)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv(files_toread[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
files_full <- read.data
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv(files_toread[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
csv.title <- list.files(directory)
csv.num <- as.numeric(sub('\\.csv$','', csv.title))
choosen.data <- na.omit(csv.title[match(id, csv.num)])
read.data <- lapply(file.path(directory,choosen.data ), read.csv)
files_full <- read.data
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv(files_toread[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 3)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
output <- rbind(output, read.csv(files_toread[i]))
nobs <- sum(complete.cases(output)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
# list files
files_full <- list.files(directory, full.names = TRUE)
files_toread <- files_full[id] # filter out unwanted files (tip: ?grep is better)
output <- data.frame(id = id, nobs = 0)
for (i in id) {
tmp <- read.csv(files_toread[i]) # read the data
nobs <- sum(complete.cases(tmp)) # number of complete cases
output[i, "nobs"] <- nobs
}
output
}
complete("specdata", 1)
complete("specdata", 3)
complete("specdata", 1:10)
complete("specdata", 30:25)
complete("specdata", 1:35)
complete("specdata", 3)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("complete.R")
submit()
source("complete.R")
submit()
submit()
this is the correct and running solution you can refer to this
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating the location of
## the CSV files
## 'threshold' is a numeric vector of length 1 indicating the number of
## completely observed observations (on all variables) required to compute
## the correlation between nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
df = complete(directory)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
complete <- function(directory, id = 1:332) {
f <- function(i) {
data = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(data))
}
nobs = sapply(id, f)
return(data.frame(id, nobs))
}
cr <- corr("specdata", 150)
head(cr)
complete <- function(directory, id = 1:332) {
f <- function(i) {
data = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(data))
}
nobs = sapply(id, f)
return(data.frame(id, nobs))
}
complete("specdata", 3)
complete("specdata", 35:20)
source("complete.R")
submit()
submit()
submit()
source("corr.R")
submit()
submit()
submit()
